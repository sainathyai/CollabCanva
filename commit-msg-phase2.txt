feat: Add multi-project frontend with dashboard UI (PR14 Phase 2)

Frontend Features:
- Project dashboard with responsive grid layout
- Create/delete project functionality
- Project switching and navigation
- Real-time project-scoped collaboration
- Beautiful UI with Tailwind CSS

New Components:
- Dashboard page with project cards and creation modal
- ProjectContext for global project state management
- Project API client with full CRUD operations
- Enhanced Header with project name and navigation

Core Changes:
- Updated Router with /dashboard route and /canvas/:projectId
- Modified WebSocket to support project-specific rooms
- Canvas page now loads and displays specific projects
- All routes wrapped in ProjectProvider for state management

User Experience:
- Clean dashboard interface
- One-click project creation
- Visual project cards with gradients
- Responsive design (mobile/tablet/desktop)
- Loading and error states
- Confirmation dialogs for destructive actions

Technical Details:
- TypeScript interfaces for type safety
- React Context for state management
- RESTful API integration
- Backward compatible with existing setup
- No breaking changes

Files:
- NEW: frontend/src/contexts/ProjectContext.tsx (90 lines)
- NEW: frontend/src/lib/projectApi.ts (95 lines)
- NEW: frontend/src/pages/Dashboard.tsx (300 lines)
- MODIFIED: frontend/src/routes/Router.tsx (project routing)
- MODIFIED: frontend/src/pages/Canvas.tsx (project integration)
- MODIFIED: frontend/src/components/Header.tsx (project name display)
- MODIFIED: frontend/src/App.tsx (project state)
- MODIFIED: frontend/src/lib/ws.ts (project authentication)

Build Status:
- TypeScript compilation: PASSED
- Vite build: SUCCESS
- Bundle size: 770KB (production)
- No linting errors

Testing:
- All TypeScript checks pass
- Build successful
- Ready for manual integration testing

Next:
- Manual testing with both servers running
- Test project creation and switching
- Test multi-user collaboration in different projects
- Verify complete data isolation between projects

Backward Compatibility:
- Existing objects in default-project
- Legacy /canvas route redirects to dashboard
- No database schema changes needed

